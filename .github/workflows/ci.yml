name: CI/CD Pipeline

on:
  push:
    branches: [main, recovery-20250731]
  pull_request:
    branches: [main, recovery-20250731]
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
            .next/cache
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-deps-
            
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: Run linter
        run: npm run lint || true
        
      - name: Type check
        run: npm run type-check || true
        
      - name: Build application
        run: npm run build:vercel
        env:
          NEXT_PUBLIC_API_URL: https://videoplanet.up.railway.app
          
      - name: Run deployment tests
        run: |
          if [ -f deployment-test.js ]; then
            node deployment-test.js
          fi
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: .next/
          retention-days: 7
          
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-deps-
            
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: Check formatting
        run: npm run format:check || true
        
      - name: Analyze bundle size
        run: |
          npm run build:analyze || true
          echo "Bundle analysis complete"
          
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run npm audit
        run: npm audit --audit-level=moderate || true
        
      - name: Run dependency check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'vridge_front'
          path: '.'
          format: 'HTML'
          
  deploy-vercel:
    name: Deploy to Vercel
    needs: [build-and-test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/recovery-20250731'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install Vercel CLI
        run: npm install -g vercel@latest
        
      - name: Pull Vercel Environment
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Build Project
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Deploy to Vercel
        run: |
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} > deployment-url.txt
          echo "Deployment URL: $(cat deployment-url.txt)"
          
      - name: Comment PR (if applicable)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const url = fs.readFileSync('deployment-url.txt', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ Deployment successful!\n\nPreview URL: ${url}`
            });
            
  lighthouse:
    name: Lighthouse Performance Check
    needs: [deploy-vercel]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/recovery-20250731'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Lighthouse CI
        uses: treosh/lighthouse-ci-action@v12
        with:
          urls: |
            https://www.vlanet.net
          uploadArtifacts: true
          temporaryPublicStorage: true